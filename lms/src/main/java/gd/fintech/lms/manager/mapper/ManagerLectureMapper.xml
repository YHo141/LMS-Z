<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.manager.mapper.ManagerLectureMapper">
	<resultMap type="gd.fintech.lms.vo.Lecture" id="selectLecture">
		<result property="lectureNo" column="lecture_no"/>
		<result property="accountId" column="account_id"/>
		<result property="subjectNo" column="subject_no"/>
		<result property="teacherName" column="teacher_name"/>
		<result property="lectureName" column="lecture_name"/>
		<result property="textbookIsbn" column="textbook_isbn"/>
		<result property="lectureStartdate" column="lecture_startdate"/>
		<result property="lectureEnddate" column="lecture_enddate"/>
		<result property="lectureTotal" column="lecture_total"/>
		<result property="syllabusNo" column="syllabus_no"/>
		<result property="classroomNo" column="classroom_no"/>
		<result property="lectureCreatedate" column="lecture_createdate"/>
		<result property="lectureUpdatedate" column="lecture_updatedate"/>
		<association property="account" javaType="gd.fintech.lms.vo.Account">
			<result property="accountId" column="account_id"/>
		</association>
		<association property="subject" javaType="gd.fintech.lms.vo.Subject">
			<result property="subjectNo" column="subject_no"/>
			<result property="subjectName" column="subject_name"/>
		</association>
		<association property="teacher" javaType="gd.fintech.lms.vo.Teacher">
			<result property="teacherId" column="teacher_id"/>
			<result property="teacherName" column="teacher_name"/>
		</association>
		<association property="textbook" javaType="gd.fintech.lms.vo.Textbook">
			<result property="textbookIsbn" column="textbook_isbn"/>
			<result property="textbookTitle" column="textbook_title"/>
		</association>
		<association property="syllabus" javaType="gd.fintech.lms.vo.Syllabus">
			<result property="syllabusNo" column="syllabus_no"/>
			<result property="syllabusContent" column="syllabus_content"/>
		</association>
		<association property="classroom" javaType="gd.fintech.lms.vo.Classroom">
			<result property="classroomNo" column="classroom_no"/>
			<result property="classroomNumber" column="classroom_number"/>
		</association>
	</resultMap>

	<!-- 강좌 목록을 불러오는 쿼리문 -->
	<select id="selectLectureList" parameterType="java.util.Map" resultMap="selectLecture">
		SELECT 
			l.lecture_no, 
			a.account_id, 
			s.subject_name, 
			t.teacher_name, 
			l.lecture_name, 
			tb.textbook_title,
			l.lecture_startdate, 
			l.lecture_enddate, 
			l.lecture_total,
			sy.syllabus_content,
			c.classroom_No,
			c.classroom_number
		FROM lecture l , account a, teacher t, subject s, syllabus sy, textbook tb, classroom c
		WHERE l.account_id = a.account_id 
		AND l.subject_no = s.subject_no 
		AND a.account_id = t.teacher_id 
		AND l.textbook_isbn = tb.textbook_isbn 
		AND l.syllabus_no = sy.syllabus_no 
		AND l.classroom_no = c.classroom_no
		ORDER BY lecture_no DESC
		LIMIT #{beginRow},#{rowPerPage}
	</select>
	<!-- 강사 목록을 불러오는 쿼리 -->
	<select id="selectTeacherList" resultType="gd.fintech.lms.vo.Teacher">
		SELECT
			teacher_id teacherId,
			teacher_name teacherName,
			teacher_email teacherEmail,
			teacher_gender teacherGender,
			teacher_birth teacherBirth
		FROM teacher
	</select>
	<!-- 과목 리스트를 출력해주는 쿼리 -->
	<select id="selectSubjectList" resultType="gd.fintech.lms.vo.Subject">
		SELECT
			subject_no subjectNo,
			subject_name subjectName
		FROM subject
	</select>
	<!-- 교재 리스트를 출력해주는 쿼리 -->
	<select id="selectTextbookList" resultType="gd.fintech.lms.vo.Textbook">
		SELECT
			textbook_isbn textbookIsbn,
			textbook_title textbookTitle
		FROM textbook
	</select>
	<!-- 강의계획서 리스트를 출력하는 쿼리 -->
	<select id="selectSyllabusList" resultType="gd.fintech.lms.vo.Syllabus">
		SELECT
			syllabus_no syllabusNo,
			syllabus_content syllabusContent
		FROM syllabus 
	</select>
	<!-- 빈 강의실 목록을 출력하는 쿼리 -->
	<select id="selectClassroomList" resultType="gd.fintech.lms.vo.Classroom">
		SELECT
			classroom_no classroomNo,
			classroom_number classroomNumber
		FROM classroom
		WHERE classroom_state = '빈강의실'	
	</select>
	<!-- 강좌를 추가해주는 쿼리 -->
	<insert id="insertLecture" parameterType="gd.fintech.lms.vo.Lecture">
		INSERT INTO lecture(
			account_id,
			subject_no,
			teacher_name,
			lecture_name,
			textbook_isbn,
			lecture_startdate,
			lecture_enddate,
			lecture_total,
			syllabus_no,
			classroom_no,
			lecture_createdate,
			lecture_updatedate
		) VALUES (
			#{accountId},
			#{subjectNo},
			#{teacherName},
			#{lectureName},
			#{textbookIsbn},
			#{lectureStartdate},
			#{lectureEnddate},
			#{lectureTotal},
			#{syllabusNo},
			#{classroomNo},
			NOW(),
			NOW()
		)
	</insert>
	<!-- 추가된 강좌에 사용한 강의실을 사용중으로 변경해주는 쿼리 -->
	<update id="updateClassroomState" parameterType="int">
		UPDATE classroom
		SET classroom_state = if(classroom_state = '빈강의실','사용중','빈강의실')
		WHERE classroom_no = #{classroomNo}
	</update>
	<!-- 강좌 추가하기 위해 필요한 선생님 아이디 가져오는 쿼리 -->
	<select id="selectTeacherId" parameterType="gd.fintech.lms.vo.Teacher" resultType="java.lang.String">
		SELECT
			teacher_id teacherId
		FROM teacher
		WHERE teacher_name = #{teacherName}
		AND teacher_email = #{teacherEmail}
		AND teacher_gender = #{teacherGender}
		AND teacher_birth = #{teacherBirth}
	</select>
	<!-- 강좌를 삭제하기 위해 id값으로 삭제하는 쿼리 -->
	<delete id="deleteLecture" parameterType="int">
		DELETE FROM lecture
		WHERE lecture_no = #{lectureNo}
	</delete>
	<!-- 강좌를 삭제하기 위해 외래키로 연결된 report를 먼저 삭제하는 쿼리 -->
	<delete id="deleteReport" parameterType="int">
		DELETE FROM report
		WHERE lecture_no = #{lectureNo}
	</delete>
	<!-- 강좌를 삭제하기 위해 외래키로 연결된 수강중인 학생을 먼저 삭제하는 쿼리 -->
	<delete id="deleteClassRegistration" parameterType="int">
		DELETE FROM class_registration
		WHERE lecture_no = #{lectureNo}
	</delete>
	<!-- 페이징에 필요한 전체 갯수를 구하는 쿼리 -->
	<select id="selectLectureTotalPage" resultType="int">
		SELECT 
			count(*)
		FROM lecture
	</select>
	<!-- 교재를 사용하고 있는 강좌의 수를 구해주는 쿼리 -->
	<select id="selectTextbookCk" parameterType="String" resultType="int">
		SELECT
			count(*)
		FROM lecture
		WHERE textbook_isbn = #{textbookIsbn}
	</select>
</mapper>