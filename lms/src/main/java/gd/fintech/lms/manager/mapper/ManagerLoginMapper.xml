<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.manager.mapper.ManagerLoginMapper">
	<!-- 해당 아이디의 pw를 랜덤한 13글자로 변경 -->
	<update id="updateAccountToPw" parameterType="java.util.Map">
		UPDATE account
		SET account_pw = PASSWORD(#{accountPw})
		WHERE account_id = #{accountId}
	</update>
	
	<!-- 이름과 이메일을 이용해서 해당 정보 체크 -->
	<select id="selectManagerToNameAndEmailByCheck" parameterType="gd.fintech.lms.vo.Manager" resultType="int">
		SELECT COUNT(*)
		FROM manager
		WHERE manager_name = #{managerName} and manager_email = #{managerEmail}
	</select>

	<!-- 이름과 이메일을 이용해서 해당 정보 찾기 -->
	<select id="selectManagerToNameAndEmail" parameterType="gd.fintech.lms.vo.Manager" resultType="gd.fintech.lms.vo.Manager">
		SELECT m.manager_id managerId, m.manager_name managerName, m.manager_email managerEmail
		FROM manager m INNER JOIN account a
		ON a.account_id = m.manager_id
		WHERE m.manager_name = #{managerName} and m.manager_email = #{managerEmail}
	</select>
	
	<!-- 중복 로그인 방지 -->
	<select id="selectConnectByOverlapLogin" parameterType="gd.fintech.lms.vo.Connect" resultType="int">
		SELECT COUNT(*)
		FROM connect
		WHERE account_id = #{accountId} and connect_state = #{connectState}
	</select>

	<!-- 로그인 시 이미지 정보 가져오기 -->
	<select id="selectManagerImage" parameterType="String" resultType="String">
		SELECT manager_image
		FROM manager
		WHERE manager_id = #{managerId}
	</select>

	<!-- 도로명을 입력 하였을 경우 주소 리스트 출력 -->
	<select id="selectAddressToSearch" parameterType="java.util.Map" resultType="gd.fintech.lms.vo.Address">
		SELECT
			sido,
			sigungu,
			doro,
			buildno1,
			buildno2,
			id
		FROM address
		WHERE doro like CONCAT(#{doro}, '%')
		ORDER BY doro, buildno1, buildno2
		<!-- LIMIT #{currentPage}, #{limitPage}-->
	</select>
	
	<!-- 아이디 중복검사 -->
	<select id="selectAccountToSignupByOverlapId" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM account
		WHERE account_id = #{accountId}
	</select>
	
	<!-- 이메일 중복검사 -->
	<select id="selectManagerToSignupByOverLapEmail" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM manager_queue
		WHERE manager_email = #{managerEmail}
	</select>
	
	<!-- 로그인 액션 -->
	<select id="selectAccountToManagerLogin" parameterType="gd.fintech.lms.vo.Account" resultType="String">
		SELECT account_id accountId
		FROM account
		WHERE
			account_id = #{accountId} and 
			account_pw = PASSWORD(#{accountPw}) and
			account_state = #{accountState} and
			account_level = #{accountLevel} 
	</select>
	
	<!-- 회원가입 시 account테이블에 추가 -->
	<insert id="insertAccountToSignup" parameterType="gd.fintech.lms.vo.ManagerForm">
		INSERT INTO account(account_id, account_pw,
							account_state, account_level,
							account_createdate, account_updatedate)
		VALUES(#{managerId}, PASSWORD(#{managerPw}),
			   #{accountState}, #{accountLevel},
			   NOW(), NOW())
	</insert>
	
	<!-- 회원가입 시 manager_queue테이블에 추가 -->
	<insert id="insertManagerQueueToSignup" parameterType="gd.fintech.lms.vo.ManagerForm">
		INSERT INTO manager_queue(manager_id, manager_email,
								  manager_phone, manager_name,
								  manager_gender, manager_birth,
								  manager_address_main, manager_address_sub)
		VALUES(#{managerId}, #{managerEmail},
			   #{managerPhone}, #{managerName},
			   #{managerGender}, #{managerBirth},
			   #{managerAddressMain}, #{managerAddressSub})
	</insert>
</mapper>