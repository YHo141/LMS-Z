<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.student.mapper.StudentLectureMapper">
	<!-- 페이징 처리한 전체 강의 목록 리스트 출력 -->
	<select id="selectLectureList" parameterType="java.util.Map" resultType="gd.fintech.lms.vo.Lecture">
		SELECT
			lecture_no lectureNo,
			teacher_name teacherName,
			lecture_name lectureName,
			lecture_startdate lectureStartdate,
			lecture_enddate lectureEnddate,
			lecture_total lectureTotal
		FROM lecture
		ORDER BY lecture_no DESC
		LIMIT #{beginRow},#{rowPerPage}
	</select>
	<!-- 페이징처리) 전체 강의목록 갯수 -->
	<select id="selectLectureListTotal" resultType="Integer">
		SELECT
			COUNT(*)
		FROM lecture
	</select>
	
	<!-- **** 강의 목록 상세보기 ****** -->
	<resultMap type="gd.fintech.lms.vo.Lecture" id="selectLectureListOneResult">
		<result property="lectureNo" column="lecture_no"/>
		<result property="accountId" column="account_id"/>
		<result property="subjectNo" column="subject_no"/>
		<result property="teacherName" column="teacher_name"/>
		<result property="lectureName" column="lecture_name"/>
		<result property="textbookIsbn" column="textbook_isbn"/>
		<result property="lectureStartdate" column="lecture_startdate"/>
		<result property="lectureEnddate" column="lecture_enddate"/>
		<result property="lectureTotal" column="lecture_total"/>
		<result property="syllabusNo" column="syllabus_no"/>
		<result property="classroomNo" column="classroom_no"/>
		<result property="lectureCreatedate" column="lecture_createdate"/>
		<result property="lectureUpdatedate" column="lecture_updatedate"/>
		<association property="account" javaType="gd.fintech.lms.vo.Account">
			<result property="accountId" column="account_id"/>
		</association>
		<association property="subject" javaType="gd.fintech.lms.vo.Subject">
			<result property="subjectNo" column="subject_no"/>
			<result property="subjectName" column="subject_name"/>
			<result property="subjectTotalday" column="subject_totalday"/>
			<result property="subjectInfo" column="subject_info"/>
		</association>
		<association property="teacher" javaType="gd.fintech.lms.vo.Teacher">
			<result property="teacherId" column="teacher_id"/>
			<result property="teacherName" column="teacher_name"/>
		</association>
		<association property="textbook" javaType="gd.fintech.lms.vo.Textbook">
			<result property="textbookIsbn" column="textbook_isbn"/>
			<result property="textbookTitle" column="textbook_title"/>
			<result property="textbookWriter" column="textbook_writer"/>
			<result property="textbookPublisher" column="textbook_publisher"/>
			<result property="textbookPublishdate" column="textbook_publishdate"/>
			<result property="textbookInfo" column="textbook_info"/>
			<result property="textbookPrice" column="textbook_price"/>
		</association>
		<association property="syllabus" javaType="gd.fintech.lms.vo.Syllabus">
			<result property="syllabusNo" column="syllabus_no"/>
			<result property="syllabusContent" column="syllabus_content"/>
		</association>
		<association property="classroom" javaType="gd.fintech.lms.vo.Classroom">
			<result property="classroomNo" column="classroom_no"/>
			<result property="classroomNumber" column="classroom_number"/>
			<result property="classroomSize" column="classroom_size"/>
			<result property="classroomTotal" column="classroom_total"/>
		</association>
	</resultMap>
	
	<select id="selectLectureListOne" parameterType="Integer" resultMap="selectLectureListOneResult">
		SELECT
			l.lecture_no,
			l.account_id,
			l.subject_no,
			l.teacher_name,
			l.lecture_name,
			l.textbook_isbn,
			l.lecture_startdate,
			l.lecture_enddate,
			l.lecture_total,
			l.syllabus_no,
			l.classroom_no,
			l.lecture_createdate,
			s.subject_name,
			s.subject_totalday,
			s.subject_info,
			tb.textbook_title,
			tb.textbook_writer,
			tb.textbook_publisher,
			tb.textbook_publishdate,
			tb.textbook_info,
			tb.textbook_price,
			sy.syllabus_content,
			c.classroom_number,
			c.classroom_size,
			c.classroom_total
		FROM lecture l
		LEFT JOIN `account` a ON l.account_id = a.account_id
		LEFT JOIN `teacher` t ON l.account_id = t.teacher_id
		LEFT JOIN subject s ON l.subject_no = s.subject_no
		LEFT JOIN textbook tb ON l.textbook_isbn = tb.textbook_isbn
		LEFT JOIN syllabus sy ON l.syllabus_no = sy.syllabus_no
		LEFT JOIN classroom c ON l.classroom_no = c.classroom_no
		WHERE l.lecture_no = #{lectureNo}
	</select>
	<!-- =====강의 정원 체크 (값이 있다면 true,없다면 false줄 예정) 중복신청방지 -->
	<select id="selectCanIApplicant" parameterType="java.util.Map" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM lecture
		WHERE (
			SELECT 
				COUNT(*)
			FROM class_registration 
			WHERE lecture_no=#{lectureNo}) &lt; #{lectureTotal}
		AND lecture_no=#{lectureNo}
		
	</select>
	<!--  ==== 강의 신청 여부 체크 ==== -->
	<select id="selectClassRegistrationCk" parameterType="java.util.Map" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM class_registration
		WHERE lecture_no = #{lectureNo}
		AND account_id = #{studentId}
		
	</select>
	<!-- ==== 강의 신청 인원 -->
	<select id="selectNumberOfApplicants" parameterType="Integer" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM class_registration
		WHERE lecture_no = #{lectureNo}
	</select>
	<!-- 수강신청 -->
	<insert id ="insertClassRegistration" parameterType="java.util.Map">
		INSERT INTO 
			class_registration(
				lecture_no,
				account_id,
				class_registration_state,
				class_registration_createdate
				)
			VALUES(
				#{lectureNo},
				#{studentId},
				'대기',
				NOW()
				)
	</insert>
	<!-- ==== 나의 수강 현황 목록 ========= -->
	<resultMap type="gd.fintech.lms.vo.ClassRegistration" id="selectMyLectureListResult">
		<result property="classRegistrationNo" column="class_registration_no"/>
		<result property="classRegistrationState" column="class_registration_state"/>
		<association property="lecture" javaType="gd.fintech.lms.vo.Lecture">
			<result property="lectureNo" column="lecture_no"/>
			<result property="accountId" column="account_id"/>
			<result property="teacherName" column="teacher_name"/>
			<result property="lectureName" column="lecture_name"/>
			<result property="lectureStartdate" column="lecture_startdate"/>
			<result property="lectureEnddate" column="lecture_enddate"/>
			<result property="lectureTotal" column="lecture_total"/>
		</association>
	</resultMap>
	<select id="selectMyLectureList" parameterType="java.util.Map" resultMap="selectMyLectureListResult">
		SELECT
			cr.class_registration_no,
			cr.class_registration_state,
			l.lecture_no,
			l.account_id,
			l.teacher_name,
			l.lecture_name,
			l.lecture_startdate,
			l.lecture_enddate,
			l.lecture_total
		FROM class_registration cr
		LEFT JOIN lecture l ON cr.lecture_no = l.lecture_no
		WHERE cr.account_id = #{studentId}
		ORDER BY lecture_no DESC
		LIMIT #{beginRow},#{rowPerPage}
	</select>
	<!-- ==== 페이징)전체 나의 수강 현황 목록 수 ===== -->
	<select id="selectMyLectureListTotal" parameterType="java.lang.String" resultType="Integer">
		SELECT
			COUNT(*)
		FROM class_registration cr
		LEFT JOIN lecture l ON cr.lecture_no = l.lecture_no
		WHERE cr.account_id = #{studentId}
	</select>
	
	<!-- ==== 날짜 종료 시 성적에 따른 과락,수료 업데이트 ==== -->
	<update id="updateMyLectureState" parameterType="java.util.Map">
		UPDATE 
			class_registration
		SET class_registration_state = #{classRegistrationState}
		WHERE account_id = #{studentId}
		AND lecture_no = #{lectureNo}
	</update>
	
	<!-- ==== 나의 수강 현황 상세보기 ==== -->
	<resultMap type="gd.fintech.lms.vo.ClassRegistrationForm" id="selectMyLectureListOneResult">
		<result property="classRegistrationNo" column="class_registration_no"/>
		<result property="classRegistrationState" column="class_registration_state"/>
		<result property="classRegistrationPoint" column="class_registration_point"/>
		<result property="classRegistrationReview" column="class_registration_review"/>
		<association property="lecture" javaType="gd.fintech.lms.vo.Lecture">
			<result property="lectureNo" column="lecture_no"/>
			<result property="accountId" column="account_id"/>
			<result property="subjectNo" column="subject_no"/>
			<result property="teacherName" column="teacher_name"/>
			<result property="lectureName" column="lecture_name"/>
			<result property="textbookIsbn" column="textbook_isbn"/>
			<result property="lectureStartdate" column="lecture_startdate"/>
			<result property="lectureEnddate" column="lecture_enddate"/>
			<result property="lectureTotal" column="lecture_total"/>
			<result property="syllabusNo" column="syllabus_no"/>
			<result property="classroomNo" column="classroom_no"/>
			<result property="lectureCreatedate" column="lecture_createdate"/>
			<result property="lectureUpdatedate" column="lecture_updatedate"/>
		</association>
		<association property="student" javaType="gd.fintech.lms.vo.Student">
			<result property="studentName" column="student_name"/>
		</association>
		<association property="account" javaType="gd.fintech.lms.vo.Account">
				<result property="accountId" column="account_id"/>
			</association>
			<association property="subject" javaType="gd.fintech.lms.vo.Subject">
				<result property="subjectNo" column="subject_no"/>
				<result property="subjectName" column="subject_name"/>
				<result property="subjectTotalday" column="subject_totalday"/>
				<result property="subjectInfo" column="subject_info"/>
			</association>
			<association property="teacher" javaType="gd.fintech.lms.vo.Teacher">
				<result property="teacherId" column="teacher_id"/>
				<result property="teacherName" column="teacher_name"/>
			</association>
			<association property="textbook" javaType="gd.fintech.lms.vo.Textbook">
				<result property="textbookIsbn" column="textbook_isbn"/>
				<result property="textbookTitle" column="textbook_title"/>
				<result property="textbookWriter" column="textbook_writer"/>
				<result property="textbookPublisher" column="textbook_publisher"/>
				<result property="textbookPublishdate" column="textbook_publishdate"/>
				<result property="textbookInfo" column="textbook_info"/>
				<result property="textbookPrice" column="textbook_price"/>
			</association>
			<association property="syllabus" javaType="gd.fintech.lms.vo.Syllabus">
				<result property="syllabusNo" column="syllabus_no"/>
				<result property="syllabusContent" column="syllabus_content"/>
			</association>
			<association property="classroom" javaType="gd.fintech.lms.vo.Classroom">
				<result property="classroomNo" column="classroom_no"/>
				<result property="classroomNumber" column="classroom_number"/>
				<result property="classroomSize" column="classroom_size"/>
				<result property="classroomTotal" column="classroom_total"/>
			</association>
	</resultMap>
	
	<select id="selectMyLectureListOne" parameterType="java.util.Map" resultMap="selectMyLectureListOneResult">
		SELECT
			cr.class_registration_no,
			cr.class_registration_state,
			cr.class_registration_point,
			cr.class_registration_review,
			st.student_name,
			l.lecture_no,
			l.account_id,
			l.subject_no,
			l.teacher_name,
			l.lecture_name,
			l.textbook_isbn,
			l.lecture_startdate,
			l.lecture_enddate,
			l.lecture_total,
			l.syllabus_no,
			l.classroom_no,
			l.lecture_createdate,
			s.subject_name,
			s.subject_totalday,
			s.subject_info,
			tb.textbook_title,
			tb.textbook_writer,
			tb.textbook_publisher,
			tb.textbook_publishdate,
			tb.textbook_info,
			tb.textbook_price,
			sy.syllabus_content,
			c.classroom_number,
			c.classroom_size,
			c.classroom_total
		FROM class_registration cr
		LEFT JOIN lecture l ON cr.lecture_no = l.lecture_no
		LEFT JOIN student st ON cr.account_id = st.student_id
		LEFT JOIN `account` a ON l.account_id = a.account_id
		LEFT JOIN `teacher` t ON l.account_id = t.teacher_id
		LEFT JOIN subject s ON l.subject_no = s.subject_no
		LEFT JOIN textbook tb ON l.textbook_isbn = tb.textbook_isbn
		LEFT JOIN syllabus sy ON l.syllabus_no = sy.syllabus_no
		LEFT JOIN classroom c ON l.classroom_no = c.classroom_no
		WHERE cr.account_id = #{studentId}
		AND l.lecture_no = #{lectureNo}
	</select>
	<!-- ==== 수료한 수강생들만 사용할 수 있는 수강 후기 작성 ==== -->
	<update id="updateLectureReview" parameterType="gd.fintech.lms.vo.ClassRegistration">
		UPDATE class_registration
		SET 
			class_registration_point = #{classRegistrationPoint},
			class_registration_review = #{classRegistrationReview}
		WHERE lecture_no = #{lectureNo}
		AND account_id = #{accountId}
	</update>
	<!-- === 승인 대기중인 강의 취소 ==== -->
	<delete id="deleteWaitingClassCancel" parameterType="Integer">
		DELETE FROM class_registration
		WHERE class_registration_no=#{classRegistrationNo}
	</delete>
	<!-- ==== 수강 중 취소한 사유 저장 ==== -->
	<insert id="insertReasonForCancellation" parameterType="gd.fintech.lms.vo.ClassRegistrationCancel">
		INSERT INTO 
			class_registration_cancel(
			class_registration_no,
			cancel_createdate,
			cancel_content
			)
		VALUES(
			#{classRegistrationNo},
			NOW(),
			#{cancelContent}
			)
	</insert>
	<!-- === 수강 중 취소시 상태 변화 / 수강중 -> 취소 -->
	<update id="updateClassStateChange" parameterType="Integer">
		UPDATE class_registration
		SET class_registration_state = '취소'
		WHERE class_registration_no = #{classRegistrationNo}
	</update>
	<!-- 강좌 삭제를 위한 해당하는 강좌의 수강취소 내역 삭제 -->
	<delete id="deleteClassRegistrationCancel" parameterType="int">
		DELETE FROM class_registration_cancel
		WHERE class_registration_no = #{classRegistrationNo}
	</delete>
	<!-- 과락, 수료 처리하기 위한 날짜 종료일 구분 -->
	<select id="selectLectureEnddate" parameterType="Integer" resultType="Integer">
		SELECT
			DATEDIFF(lecture_enddate,NOW())
		FROM lecture
		WHERE lecture_no=#{lectureNo}
	</select>
	<!-- 해당 강의 과제 평균 점수 -->
	<select id="selectReportAvg" parameterType="java.util.Map" resultType="Integer">
		SELECT 
			coalesce(ROUND(AVG(rs.report_submit_point),0),0)
		FROM report r
		LEFT JOIN report_submit rs ON r.report_no=rs.report_no
		WHERE r.lecture_no=#{lectureNo}
		AND rs.account_id=#{studentId}
	</select>
</mapper>




