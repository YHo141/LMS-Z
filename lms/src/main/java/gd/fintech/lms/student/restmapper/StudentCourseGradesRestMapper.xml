<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.student.restmapper.StudentCourseGradesRestMapper">
	<select id="selectCourseGreads" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT
			nvl(SUM(case when l.lecture_no = 20 AND `as`.account_id=#{studentId} then `as`.score END), 0) 'test',
			ROUND(nvl(AVG(case when l.lecture_no = 20 then `as`.score END), 0),1) 'testAvg',
			nvl(SUM(case when l.lecture_no = 4 AND `as`.account_id=#{studentId} then `as`.score END), 0) 'fintech',
			ROUND(nvl(AVG(case when l.lecture_no = 4 then `as`.score END), 0),1) 'fintechAvg',
			nvl(SUM(case when l.lecture_no = 5 AND `as`.account_id=#{studentId} then `as`.score END), 0) 'JAVAcc',
			ROUND(nvl(AVG(case when l.lecture_no = 5 then `as`.score END), 0),1) 'JAVAccAvg',
			nvl(SUM(case when l.lecture_no = 10 AND `as`.account_id=#{studentId} then `as`.score END), 0) 'Doraemon',
			ROUND(nvl(AVG(case when l.lecture_no = 10 then `as`.score END), 0),1) 'DoraemonAvg',
			nvl(SUM(case when l.lecture_no = 11 AND `as`.account_id=#{studentId} then `as`.score END), 0) 'DigitalEngineering',
			ROUND(nvl(AVG(case when l.lecture_no = 11 then `as`.score END), 0),1) 'DigitalEngineeringAvg',
			nvl(SUM(case when l.lecture_no = 12 AND `as`.account_id=#{studentId} then `as`.score END), 0) 'Cshop',
			ROUND(nvl(AVG(case when l.lecture_no = 12 then `as`.score END), 0),1) 'CshopAvg'
		FROM lecture l
		LEFT JOIN multiplechoice mc 
		ON l.lecture_no = mc.lecture_no
		LEFT JOIN answer_sheet `as`
		ON `as`.multiplechoice_no = mc.multiplechoice_no
	</select>
	
	<!-- ==== 나의 수강 현황 목록 ========= -->
	<resultMap type="gd.fintech.lms.vo.ClassRegistration" id="selectMyLectureListResult">
		<result property="classRegistrationNo" column="class_registration_no"/>
		<result property="classRegistrationState" column="class_registration_state"/>
		<association property="lecture" javaType="gd.fintech.lms.vo.Lecture">
			<result property="lectureNo" column="lecture_no"/>
			<result property="accountId" column="account_id"/>
			<result property="teacherName" column="teacher_name"/>
			<result property="lectureName" column="lecture_name"/>
			<result property="lectureStartdate" column="lecture_startdate"/>
			<result property="lectureEnddate" column="lecture_enddate"/>
			<result property="lectureTotal" column="lecture_total"/>
		</association>
	</resultMap>
	<select id="selectAllMyLectureList" parameterType="java.lang.String" resultMap="selectMyLectureListResult">
		SELECT
			cr.class_registration_no,
			cr.class_registration_state,
			l.lecture_no,
			l.account_id,
			l.teacher_name,
			l.lecture_name,
			l.lecture_startdate,
			l.lecture_enddate,
			l.lecture_total
		FROM class_registration cr
		LEFT JOIN lecture l ON cr.lecture_no = l.lecture_no
		WHERE cr.account_id = #{studentId}
		ORDER BY lecture_no DESC
	</select>
</mapper>