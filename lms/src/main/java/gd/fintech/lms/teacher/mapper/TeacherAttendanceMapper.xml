<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.teacher.mapper.TeacherAttendanceMapper">
	<select id="selectLectureByName" parameterType="int" resultType="String">
		SELECT lecture_name lectureName
		FROM lecture
		WHERE lecture_no = #{lectureNo}
	</select>
	
	<select id="selectAttendanceByDay" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM attendance
		WHERE attendance_day = #{attendanceDay} and class_registration_no = #{classRegistrationNo}
	</select>

	<!-- 날짜 초기 학생 테이블에 아이디가 있는지를 조사 -->
	<select id="selectClassRegistrationByNo" parameterType="java.util.Map" resultType="Integer">
		select cr.class_registration_no
		from class_registration cr INNER JOIN lecture l
			ON cr.lecture_no = l.lecture_no
		WHERE cr.lecture_no = #{lectureNo} AND 
			  cr.class_registration_state = "수강중" AND 
			  #{attendanceDay} BETWEEN l.lecture_startdate and l.lecture_enddate
	</select>	

	<!-- 날짜 초기 학생 attendance테이블에 추가 -->
	<insert id="insertAttendanceByDay" parameterType="gd.fintech.lms.vo.Attendance">
		INSERT INTO attendance(
						attendance_day, 
						class_registration_no, 
						attendance_createdate,
						attendance_updatedate,
						attendance_state)
					VALUES(
						#{attendanceDay},
						#{classRegistrationNo},
						NOW(),
						NOW(),
						"미출석")
	</insert>

	<resultMap type="gd.fintech.lms.vo.Attendance" id="selectAttendanceEtcListResult">
		<result property="attendanceState" column="attendance_state" />
		<collection property="studentList" ofType="gd.fintech.lms.vo.Student">
			<result property="studentName" column="student_name" />
			<result property="studentImage" column="student_image" />
			<result property="studentId" column="student_id" />
		</collection>
	</resultMap>
	<!-- 학생 출석부 일별 -->
	<select id="selectAttendanceEtcList" parameterType="java.util.Map" resultMap="selectAttendanceEtcListResult">
		SELECT s.student_id,s.student_name, s.student_image, a.attendance_state
		FROM attendance a RIGHT JOIN class_registration cr
			ON a.class_registration_no = cr.class_registration_no
		INNER JOIN student s
			ON cr.account_id = s.student_id
		WHERE cr.lecture_no = #{lectureNo} AND a.attendance_day = #{attendanceDay}
		AND a.attendance_state != "출석"
		AND a.attendance_state != "미출석"
	</select>
	
	<resultMap type="gd.fintech.lms.vo.Attendance" id="selectAttendanceYesListResult">
		<result property="attendanceState" column="attendance_state" />
		<collection property="studentList" ofType="gd.fintech.lms.vo.Student">
			<result property="studentName" column="student_name" />
			<result property="studentImage" column="student_image" />
			<result property="studentId" column="student_id" />
		</collection>
	</resultMap>
	<!-- 학생 출석부 일별 -->
	<select id="selectAttendanceYesList" parameterType="java.util.Map" resultMap="selectAttendanceYesListResult">
		SELECT s.student_id,s.student_name, s.student_image, a.attendance_state
		FROM attendance a RIGHT JOIN class_registration cr
			ON a.class_registration_no = cr.class_registration_no
		INNER JOIN student s
			ON cr.account_id = s.student_id
		WHERE cr.lecture_no = #{lectureNo} AND a.attendance_day = #{attendanceDay}
		AND a.attendance_state = "출석"
	</select>
	
	<resultMap type="gd.fintech.lms.vo.Attendance" id="selectAttendanceListResult">
		<result property="attendanceState" column="attendance_state" />
		<collection property="studentList" ofType="gd.fintech.lms.vo.Student">
			<result property="studentName" column="student_name" />
			<result property="studentImage" column="student_image" />
			<result property="studentId" column="student_id" />
		</collection>
	</resultMap>
	<!-- 학생 출석부 일별 -->
	<select id="selectAttendanceList" parameterType="java.util.Map" resultMap="selectAttendanceListResult">
		SELECT s.student_id,s.student_name, s.student_image, a.attendance_state
		FROM attendance a RIGHT JOIN class_registration cr
			ON a.class_registration_no = cr.class_registration_no
		INNER JOIN student s
			ON cr.account_id = s.student_id
		WHERE cr.lecture_no = #{lectureNo} AND a.attendance_day = #{attendanceDay}
	</select>
	
	<resultMap type="gd.fintech.lms.vo.Attendance" id="selectAttendanceOneResult">
		<result property="attendanceState" column="attendance_state" />
		<result property="attendanceRemark" column="attendance_remark" />
		<result property="attendanceUpdatedate" column="attendance_updatedate" />
		<collection property="studentList" ofType="gd.fintech.lms.vo.Student">
			<result property="studentId" column="student_id" />
			<result property="studentName" column="student_name" />
			<result property="studentPhone" column="student_phone" />
			<result property="studentImage" column="student_image" />
		</collection>
	</resultMap>
	
	<!-- 학생 출석부 상세보기 -->
	<select id="selectAttendanceOne" parameterType="java.util.Map" resultMap="selectAttendanceOneResult">
		SELECT 
			s.student_id, 
			s.student_name, 
			s.student_phone, 
			s.student_image, 
			a.attendance_state, 
			a.attendance_remark, 
			a.attendance_updatedate
		FROM attendance a INNER JOIN class_registration cr
			ON a.class_registration_no = cr.class_registration_no
		INNER JOIN student s
			ON s.student_id = cr.account_id
		WHERE 
			cr.account_id = #{studentId} AND 
			cr.lecture_no = #{lectureNo} AND
			a.attendance_day = #{attendanceDay}
	</select>
	
	<select id="selectAttendanceStateCheck" parameterType="gd.fintech.lms.vo.Attendance" resultType="String">
		SELECT a.attendance_state
		FROM attendance a INNER JOIN class_registration cr
		ON a.class_registration_no = cr.class_registration_no
		WHERE 
			cr.lecture_no = #{lectureNo} AND 
			cr.account_id = #{accountId} AND 
			a.attendance_day = #{attendanceDay}
	</select>
	<!-- 학생 출석상태 변경 -->
	<update id="updateAttendanceState" parameterType="gd.fintech.lms.vo.Attendance">
		UPDATE attendance a INNER JOIN class_registration cr
		ON a.class_registration_no = cr.class_registration_no
		SET 
			a.attendance_state = #{attendanceState},
			a.attendance_remark = #{attendanceRemark}, 
			a.attendance_updatedate = NOW()
		WHERE cr.account_id = #{accountId}
		AND cr.lecture_no = #{lectureNo}
		AND a.attendance_day = #{attendanceDay}
	</update>
	<!-- 강좌 삭제시 삭제할 출석부 -->
	<delete id="deleteAttendance" parameterType="int">
		DELETE FROM attendance
		WHERE class_registration_no = #{classRegistrationNo}
	</delete>
</mapper>