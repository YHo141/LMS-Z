<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.teacher.mapper.TeacherLectureNoticeMapper">
	<!-- 강좌별 공지사항 목록 -->
	<select id="selectLectureNoticeList" parameterType="java.util.Map" resultType="gd.fintech.lms.vo.LectureNotice">
		SELECT
			lecture_notice_no lectureNoticeNo,
			lecture_no lectureNo,
			lecture_notice_title lectureNoticeTitle,
			lecture_notice_content lectureNoticeContent,
			lecture_notice_createdate lectureNoticeCreatedate,
			lecture_notice_updatedate lectureNoticeUpdatedate,
			lecture_notice_count lectureNoticeCount
		FROM lecture_notice
		WHERE lecture_no = #{lectureNo}
		ORDER BY lecture_notice_createdate DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 강좌별 공지사항 목록 페이징을 위한 전체 개수 -->
	<select id="selectLectureNoticeCount" parameterType="int" resultType="int">
		SELECT
			COUNT(*)
		FROM lecture_notice
		WHERE lecture_no = #{lectureNo}
	</select>
	
	<!-- 강좌별 공지사항 등록 -->
	<insert id="insertLectureNotice" parameterType="gd.fintech.lms.vo.LectureNotice">
		INSERT INTO lecture_notice(
			lecture_no,
			lecture_notice_title,
			lecture_notice_content,
			lecture_notice_createdate,
			lecture_notice_updatedate
		)VALUES(
			#{lectureNo},
			#{lectureNoticeTitle},
			#{lectureNoticeContent},
			NOW(),
			NOW()
		)
	</insert>

	<!-- 강좌별 공지사항 상세보기 -->
	<select id="selectLectureNoticeOne" parameterType="int" resultType="gd.fintech.lms.vo.LectureNotice">
		SELECT
			lecture_notice_no lectureNoitceNo,
			lecture_notice_title lectureNoticeTitle,
			lecture_notice_content lectureNoticeContent,
			lecture_notice_createdate lectureNoticeCreatedate,
			lecture_notice_updatedate lectureNoticeUpdatedate
		FROM lecture_notice
		WHERE lecture_notice_no = #{lectureNoticeNo}
	</select>
	
	<!-- 강좌별 공지사항 수정 -->
	<update id="updateLectureNotice" parameterType="gd.fintech.lms.vo.LectureNotice">
		UPDATE lecture_notice
		SET
			lecture_notice_title = #{lectureNoticeTitle},
			lecture_notice_content = #{lectureNoticeContent},
			lecture_notice_updatedate = NOW()
		WHERE lecture_notice_no = #{lectureNoticeNo}
	</update>
	
	<!-- 강좌별 공지사항 삭제 -->
	<delete id="deleteLectureNotice" parameterType="int">
		DELETE FROM lecture_notice
		WHERE lecture_notice_no = #{lectureNoticeNo}
	</delete>
	<!-- 운영자가 강좌를 삭제할때 삭제되는 쿼리 -->
	<delete id="deleteLecture" parameterType="int">
		DELETE FROM lecture_notice
		WHERE lecture_no = #{lectureNo}
	</delete>
</mapper>