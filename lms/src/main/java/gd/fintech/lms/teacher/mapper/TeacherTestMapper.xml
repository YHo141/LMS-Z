<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.teacher.mapper.TeacherTestMapper">
	<!-- 시험목록 출력 -->
	<select id="selectTestList" parameterType="int" resultType="gd.fintech.lms.vo.Test">
		SELECT
			test_no testNo,
			lecture_no lectureNo,
			test_startdate testStartdate,
			test_enddate testEnddate,
			test_content testContent,
			test_createdate,
			test_updatedate
		FROM test
		WHERE lecture_no = #{lectureNo}
	</select>
	
	<!-- 시험문제 / 문제 보기 1:다 -> collection사용 -->
	<resultMap type="gd.fintech.lms.vo.Multiplechoice" id="selectTestQuestionOne">
		<result property="multiplechoiceNo" column="multiplechoice_no"/>
		<result property="lectureNo" column="lecture_no"/>
		<result property="multiplechoiceId" column="multiplechoice_id"/>
		<result property="multiplechoiceQuestion" column="multiplechoice_question"/>
		<result property="multiplechoiceAnswer" column="multiplechoice_answer"/>
		<result property="multiplechoiceCreatedate" column="multiplechoice_createdate"/>
		<result property="multiplechoiceUpdatedate" column="multiplechoice_updatedate"/>
		<!-- 문제 보기 -->
		<collection property="multiplechoiceExampleList" ofType="gd.fintech.lms.vo.MultiplechoiceExample">
			<result property="multiplechoiceExampleNo" column="multiplechoice_example_no"/>
			<result property="multiplechoiceNo" column="multiplechoice_no"/>
			<result property="multiplechoiceExampleId" column="multiplechoice_example_id"/>
			<result property="multiplechoiceExampleContent" column="multiplechoice_example_content"/>
		</collection>
	</resultMap>
	
	<!-- 시험문제, 답 상세보기 -->
	<select id="selectTestQuestionOne" parameterType="int" resultMap="selectTestQuestionOne">
		SELECT
			mc.multiplechoice_no,
			mc.lecture_no,
			mc.multiplechoice_id,
			mc.multiplechoice_question,
			mc.multiplechoice_answer,
			mc.multiplechoice_createdate,
			mc.multiplechoice_updatedate,
			mce.multiplechoice_example_no,
			mce.multiplechoice_example_id,
			mce.multiplechoice_example_content
		FROM multiplechoice mc, multiplechoice_example mce
		WHERE mc.multiplechoice_no = mce.multiplechoice_no
		AND mc.multiplechoice_no = #{multiplechoiceNo}
	</select>
	
	<!-- 시험문제 목록 출력 -->
	<select id="selectTestQuestionList" parameterType="int" resultType="gd.fintech.lms.vo.Multiplechoice">
		SELECT
			multiplechoice_no multiplechoiceNo,
			lecture_no lectureNo,
			multiplechoice_id multiplechoiceId,
			multiplechoice_question multiplechoiceQuestion,
			multiplechoice_createdate multiplechoiceCreatedate,
			multiplechoice_updatedate multiplechoiceUpdatedate
		FROM multiplechoice
		WHERE lecture_no = #{lectureNo}
		ORDER BY multiplechoice_id ASC
	</select>
	
	<!-- 시험정보(일정) 추가 -->
	<insert id="insertTest" parameterType="gd.fintech.lms.vo.Test">
		INSERT INTO test(
			lecture_no,
			test_startdate,
			test_enddate,
			test_content,
			test_createdate,
			test_updatedate
		)VALUES(
			#{lectureNo},
			#{testStartdate},
			#{testEnddate},
			#{testContent},
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- 시험정보(일정) 수정 -->
	<update id="updateTest" parameterType="gd.fintech.lms.vo.Test">
		UPDATE test
		SET
			test_startdate = #{testStartdate},
			test_enddate = #{testEnddate},
			test_content = #{testContent},
			test_updatedate = NOW()
		WHERE lecture_no = #{lectureNo}
	</update>
	
	<!-- 시험문제 추가 -->
	<!-- 시험문제 보기(multiplechoiceExample)과 같이 입력하기 위해 seleteKey 사용 -->
	<insert id="insertTestQuestion" parameterType="gd.fintech.lms.vo.Multiplechoice">
		<selectKey resultType="int" keyProperty="multiplechoiceNo" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO multiplechoice(
			lecture_no,
			multiplechoice_id,
			multiplechoice_question,
			multiplechoice_answer,
			multiplechoice_createdate,
			multiplechoice_updatedate
		)VALUES(
			#{lectureNo},
			#{multiplechoiceId},
			#{multiplechoiceQuestion},
			#{multiplechoiceAnswer},
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- 시험문제 보기 추가 -->
	<insert id="insertTestQuestionExample" parameterType="gd.fintech.lms.vo.MultiplechoiceExample">
		INSERT INTO multiplechoice_example(
			multiplechoice_no,
			multiplechoice_example_id,
			multiplechoice_example_content,
			multiplechoice_example_createdate,
			multiplechoice_example_updatedate
		)VALUES(
			#{multiplechoiceNo},
			#{multiplechoiceExampleId},
			#{multiplechoiceExampleContent},
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- 시험문제번호 중복검사 -->
	<!-- 해당 강의의 입력하려는 시험번호가 있다면 count 출력해서 중복검사 -->
	<select id="selectMultiplechoiceIdOverlap" parameterType="java.util.Map" resultType="int">
		SELECT
			COUNT(*)
		FROM multiplechoice
		WHERE lecture_no = #{lectureNo}
		AND multiplechoice_id = #{multiplechoiceId}
	</select>
	
	<!-- 시험문제 수정 -->
	<update id="updateTestQuestion" parameterType="gd.fintech.lms.vo.Multiplechoice">
		UPDATE multiplechoice
		SET
			multiplechoice_question = #{multiplechoiceQuestion},
			multiplechoice_answer = #{multiplechoiceAnswer},
			multiplechoice_updatedate = NOW()
		WHERE multiplechoice_no = #{multiplechoiceNo}
	</update>
	
	<!-- 시험문제보기 수정 -->
	<update id="updateTestQuestionExample" parameterType="gd.fintech.lms.vo.MultiplechoiceExample">
		UPDATE multiplechoice_example
		SET
			multiplechoice_example_content = #{multiplechoiceExampleContent},
			multiplechoice_example_updatedate = NOW()
		WHERE multiplechoice_example_id = #{multiplechoiceExampleId}
		AND multiplechoice_no = #{multiplechoiceNo}
	</update>
	
	<!-- 시험문제 삭제 -->
	<delete id="deleteTestQuestion" parameterType="int">
		DELETE FROM multiplechoice
		WHERE multiplechoice_no = #{multiplechoiceNo}
	</delete>
	
	<!-- 시험문제 보기 삭제 -->
	<delete id="deleteTestQuestionExample" parameterType="int">
		DELETE FROM multiplechoice_example
		WHERE multiplechoice_no = #{multiplechoiceNo}
	</delete>
</mapper>